/* Hamburger Menu */
.menu-wrap {
  /* We want the position to be fixed so that, no matter where we scroll on the page, the menu will stay in a fixed position, which is what we want because the hamburger overlay shouldn't move up and down dependent on where the user is scrolled on the page */
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1;
  height: 100vh;
  width: 100%;
}

/* We are using this checkbox purely for functionality. We want this to be invisible, but to overlay the hamburger so that we can monitor the state of the checkbox and have functionality occur when the state of the checkbox changes */
.menu-wrap .toggler {
  position: absolute;
  /* We could set 'visibility: hidden' in order to hide the checkbox, but this would disable our ability to tick/untick it, thus changing the opacity to 0 is the better solution because we can still alter the state */
  opacity: 0;
  top: 0;
  left: 0;
  width: 50px;
  height: 50px;
  cursor: pointer;
  z-index: 2;
}

/* This will lie under the checkbox and will be the visuals for the hamburger menu. We position it absolutely so it can be brought out from its original position, which would be to sit underneath the invisible checkbox
The inner div will hold the lines of the hamburger */
.menu-wrap .hamburger {
  position: absolute;
  top: 0;
  left: 0;
  width: 60px;
  height: 60px;
  /* cursor: pointer; */
  z-index: 1;
  padding: 1rem;
  background: var(--primary-colour);
  display: flex;
  justify-content: center;
  align-items: center;
}


/* This inner div is what will constitute the first, middle layer of the burger, and we will use ::before and ::after to create the top and bottom layers of the burger menu
We position it relative because we want the before and after sections to be positioned relative to this element*/
.menu-wrap .hamburger > div {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  background: #fff;
  height: 2px;
  transition: all 200ms ease;

  /* display: flex;
  align-items: center;
  justify-content: center; */
}

/* We translateY so we can place the section above the already-set element - the middle part of the burger */
.menu-wrap .hamburger > div::before,
.menu-wrap .hamburger > div::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background: inherit;
  height: 2px;
  transform: translateY(-10px);
}

.menu-wrap .hamburger > div::after {
  transform: translateY(10px);
}


/* Toggler Animation */
/* Here we turn the entire div, including the before and after, when the state of the checkbox is 'checked' */
.menu-wrap .toggler:checked + .hamburger > div {
  transform: rotate(135deg);
}

/* Here we rotate the two other lines - the ::before and ::after - to make the appearance of a cross */
/* I have created two separate selectors simply to show the translateY statements. When these statements
  are uncommented, we have the three lines showing separately, all spaced out, without the rotation being applied,
  which implies that only one transform can be present in a given state, which thus helps us take note that the original
  translations have been overriden with this rotation of 90deg transformation. */
.menu-wrap .toggler:checked + .hamburger > div::before {
  transform: rotate(90deg);
  /* transform: translateY(-10px); */
}

.menu-wrap .toggler:checked + .hamburger > div::after {
  transform: rotate(90deg);
  /* transform: translateY(+10px); */
}

/* Toggler Animation When Checked - On Hover */
.menu-wrap .toggler:checked:hover + .hamburger > div {
  transform: rotate(225deg);
} 


/* Overlay */
.menu-wrap .menu {
  position: fixed; 
  top: 0;
  left: 0;
  height: 100vh; 
  width: 100%;
  display: flex;
  /* flex: none; */
  justify-content: center;
  align-items: center;
  text-align: center;
  visibility: hidden; 
  overflow: hidden;
}

.menu-wrap .menu > div {
  display: flex;
  flex: none;
  justify-content: center;
  align-items: center;
  transform: scale(0);
  transition: all 400ms ease;
  background: var(--overlay-colour);
  width: 200vw;
  height: 200vh;
  border-radius: 50%;
}

.menu-wrap .menu > div > div {
  text-align: center;
  max-width: 90vh;
  max-height: 100vh;
  opacity: 0;
  transition: all 400ms ease 400ms;
}

.menu-wrap .menu > div > div > ul > li {
  list-style: none;
  color: #fff;
  font-size: 1.5rem;
  padding: 1rem;
}

.menu-wrap .menu > div > div > ul > li > a { 
  color: inherit;
  text-decoration: none;
  transition: color 400ms ease;
}

.menu-wrap .menu > div > div > ul > li > a:hover {
  color: var(--secondary-colour);
}

/* The tilde selector selects the sibling on the same level, and the sibling doesn't have to directly proceed or precede it */
.menu-wrap .toggler:checked ~ .menu {
  visibility: visible;
}

.menu-wrap .toggler:checked ~ .menu > div {
  transform: scale(1);
  transition-duration: var(--animation-speed);
}

.menu-wrap .toggler:checked ~ .menu > div > div {
  opacity: 1;
  transition: opacity 400ms ease 400ms;
}